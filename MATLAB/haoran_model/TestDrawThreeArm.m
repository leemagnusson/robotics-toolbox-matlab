%% Test three robot arms with hernia setup
% This script shows the user how to setup three arms with table and table
% adapter. It is using Ver 1.0 arm and Hernia setup as an example. The
% joint values are get from "q_init_setup_hernia.mat" which is generated by
% procedure setup UI.
%%
clc
clear all
close all
load('vertex_arm_origin_1.5.mat');
load('point_boundary_arm_1.5.mat');
load('arm_version_1.5.mat')
load('vertex_patient_body.mat');
load('q_init_setup_hernia_1.5_testing.mat');
load('index_joints.mat');
load('vertex_bed.mat');
% load('vertex_bed_adapter_new.mat');
load('vertex_bed_adapter.mat');
load('coupling_matrix.mat');
InitHerniaSetup;
figure(1)
hold on
view(62,28)
axis equal
DrawBed(vertex_bed,[0.0 0.7 0.0 1]);
hold on
DrawCoordinateSystem([0.1 0.1 0.1],transformation_bed_base(1:3,1:3),transformation_bed_base(1:3,4),'rgb','b');
hold on
num_bed_adapter = 0;
q_bed_adapter = [0 -0.02 0;-40*pi/180 -0.18 0;0 -0.02 0]';
for index_bed_adapter = [2 1 5]
    num_bed_adapter = num_bed_adapter + 1;
    frames_bed_adapter = CalculateBedAdapterFK(q_bed_adapter(:,num_bed_adapter),frames_bed_adapter_base(:,:,index_bed_adapter));
    DrawBedAdapter(frames_bed_adapter,vertex_bed_adapter,[1 0 0 1])
    hold on
    q = [q_init_setup(:,num_bed_adapter);0;0];
    robot_object.transformation_base_ = frames_bed_adapter(:,:,end);
    robot_object.CalculateFK(q);
    robot_object.DrawRobot(vertex_arm_origin)
    hold on
end
% Draw hernia
vertex_patient_transformed = transformSTL(vertex_patient_body,rotation_patient,translation_patient);
patient_color = [0 0 1 0.3];
PlotStl(vertex_patient_transformed,patient_color);
hold on
axis([-1.2 1 -0.8 0.8 -0.2 2.8])
light('Position',[1 3 2]);
light('Position',[-3 -1 -3]);
drawnow;